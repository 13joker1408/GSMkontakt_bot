from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes,
)

MODEL, CONDITION, KIT, DISTRICT, PHONE = range(5)

# –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [KeyboardButton("üì± –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
        [KeyboardButton("‚ÑπÔ∏è –û –Ω–∞—Å"), KeyboardButton("üè¨ –ê–¥—Ä–µ—Å–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã")]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è ConversationHandler
async def start_form(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É. –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:")
    return MODEL

async def model(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –º–æ–¥–µ–ª—å: {update.message.text}. –¢–µ–ø–µ—Ä—å —É—Å–ª–æ–≤–∏–µ:")
    return CONDITION

async def condition(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"–£—Å–ª–æ–≤–∏–µ: {update.message.text}. –¢–µ–ø–µ—Ä—å –∫–æ–º–ø–ª–µ–∫—Ç:")
    return KIT

async def kit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"–ö–æ–º–ø–ª–µ–∫—Ç: {update.message.text}. –¢–µ–ø–µ—Ä—å —Ä–∞–π–æ–Ω:")
    return DISTRICT

async def district(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f"–†–∞–π–æ–Ω: {update.message.text}. –¢–µ–ø–µ—Ä—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return PHONE

async def phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    contact = update.message.contact.phone_number if update.message.contact else update.message.text
    await update.message.reply_text(f"–°–ø–∞—Å–∏–±–æ! –í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω: {contact}. –ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.")
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–û—Ç–º–µ–Ω–∞ –∑–∞—è–≤–∫–∏.")
    return ConversationHandler.END

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "‚ÑπÔ∏è –û –Ω–∞—Å" –∏ "üè¨ –ê–¥—Ä–µ—Å–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã"
async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å.")

async def contacts(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞—à–∏ –∞–¥—Ä–µ—Å–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã: ...")

if __name__ == "__main__":
    APP_URL = "https://yourdomain.com"
    WEBHOOK_SECRET = "some_secret"

    telegram_app = ApplicationBuilder().token("YOUR_BOT_TOKEN").build()

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–Ω–∞—á–∞–ª–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ —Å —Ç–µ–∫—Å—Ç–æ–º
    telegram_app.add_handler(CommandHandler("start", start))
    telegram_app.add_handler(MessageHandler(filters.Regex("^‚ÑπÔ∏è –û –Ω–∞—Å$") & filters.TEXT, about))
    telegram_app.add_handler(MessageHandler(filters.Regex("^üè¨ –ê–¥—Ä–µ—Å–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã$") & filters.TEXT, contacts))

    # –ó–∞—Ç–µ–º ConversationHandler
    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^üì± –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É$") & filters.TEXT, start_form)],
        states={
            MODEL: [MessageHandler(filters.TEXT & ~filters.COMMAND, model)],
            CONDITION: [MessageHandler(filters.TEXT & ~filters.COMMAND, condition)],
            KIT: [MessageHandler(filters.TEXT & ~filters.COMMAND, kit)],
            DISTRICT: [MessageHandler(filters.TEXT & ~filters.COMMAND, district)],
            PHONE: [MessageHandler(filters.CONTACT | filters.TEXT, phone)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )
    telegram_app.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫ (–¥–ª—è webhook, –Ω–∞–ø—Ä–∏–º–µ—Ä)
    import asyncio

    async def main():
        await telegram_app.initialize()
        await telegram_app.start()
        webhook_url = f"{APP_URL}/{WEBHOOK_SECRET}"
        await telegram_app.bot.set_webhook(webhook_url)
        print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")
        # –ñ–¥—ë–º, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å—Ä–∞–∑—É
        await telegram_app.updater.idle()

    asyncio.run(main())
